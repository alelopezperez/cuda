SCRIPT = installer-$(CUDA_VERSION)
REMOTE_CUDA_DIR = https://developer.nvidia.com/compute/cuda/$(CUDA_VERSION)/Prod
INSTALLER_URL = $(REMOTE_CUDA_DIR)/local_installers/$(INSTALLER)
CUDA_DIR = cuda-$(CUDA_VERSION)

PREFIX ?= /usr/lib

BEFORE = $(DESTDIR)$(PREFIX)
.PHONY: all clean install

all:
	# Download the installer if it does not already exist, or has an invalid checksum
	if [ ! -f $(SCRIPT) ] || [ $(shell md5sum $(SCRIPT) | cut -d' ' -f1) != $(INSTALLER_SUM) ]; then \
		echo installer checksum does not match; \
		exit 1; \
	fi

clean:

install:
	mkdir -p $(BEFORE)/$(CUDA_DIR) build

	./installer-$(CUDA_VERSION) --override --extract=$(PWD)/build

	mv build/cuda_samples $(BEFORE)/$(CUDA_DIR)/samples
	cd build; mv bin integration nsight_compute nsight_systems EULA.txt $(BEFORE)/$(CUDA_DIR)/

	for module in build/cuda_* build/lib*; do \
		cp -a $${module}/* $(BEFORE)/$(CUDA_DIR)/; \
		rm -rf $${module}; \
	done

	ls $(BEFORE)/$(CUDA_DIR)

	# Fix the paths due to the packaging destination differing from the actual system destination.
	find $(BEFORE)/$(CUDA_DIR) -type f \
		-not -name '*.so' -not -name '*.a' \
		-exec sed -i -e 's#$(BEFORE)#$(PREFIX)#g; s#usr/local#$(PREFIX)#g' {} \;

	# Add missing symlinks
	for file in $$(find $(BEFORE)/$(CUDA_DIR)/lib64/ -name '*.so'); do \
		test -f $${file}.$(CUDA_VERSION) || ln -s $$(basename $$file) $${file}.$(CUDA_VERSION); \
	done
